<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM
"/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
Copyright 2006 Sun Microsystems, Inc. All rights reserved.
Use is subject to license terms.

CDDL HEADER START

The contents of this file are subject to the terms of the
Common Development and Distribution License (the "License").
You may not use this file except in compliance with the License.

You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
or http://www.opensolaris.org/os/licensing.
See the License for the specific language governing permissions
and limitations under the License.

When distributing Covered Code, include this CDDL HEADER in each
file and include the License file at usr/src/OPENSOLARIS.LICENSE.

If applicable, add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your own identifying
information: Portions Copyright [yyyy] [name of copyright owner]

CDDL HEADER END

     ident "%Z%%M% %I% %E SMI"

     NOTE: This service manifest is not editable; its contents will
     be overwritten by package or patch
     operations, including operating system upgrade. Make customizations
     in a different file.
-->

<service_bundle type='manifest' name='pgq'>

<service
     name='application/database/pgq'
     type='service'
     version='1'>

     <!--
     Wait for network interfaces to be initialized.
     -->
     <dependency
          name='network'
          grouping='require_all'
          restart_on='none'
          type='service'>
          <service_fmri value='svc:/milestone/network:default' />
     </dependency>

     <!--
          Wait for all local filesystems to be mounted.
     -->
     <dependency
          name='filesystem-local'
          grouping='require_all'
          restart_on='none'
          type='service'>
     <service_fmri value='svc:/system/filesystem/local:default' />
     </dependency>

     <exec_method
          type='method'
          name='start'
          exec='/lib/svc/method/pgq start'
          timeout_seconds='300' />
     <exec_method
          type='method'
          name='stop'
          exec='/lib/svc/method/pgq stop'
          timeout_seconds='300' />
     <exec_method
          type='method'
          name='refresh'
          exec='/lib/svc/method/pgq refresh'
          timeout_seconds='60' />

     <property_group name='general' type='framework'>
          <!-- to stop/start postgreSQL -->
          <propval name='action_authorization' type='astring'
          value='solaris.smf.manage.postgresql' />
     </property_group>
     <!--
       We define one instance of PostgreSQL as an example.
     -->

     <instance name='dev' enabled='true'>
          <method_context>
               <method_credential user='megxnet' group='postgres' />
          </method_context>

          <property_group name='pgq' type='application'>
          	   <propval name='pgqdir' type='astring' value='/opt/pgq' />
               <propval name='consumer' type='astring' value='qsub-consumer.py' />
               <propval name='consumer-config' type='astring' value='antares/dev-megdb_r8-qsub-consumer.conf' />
               <propval name='ticker' type='astring' value='antares/dev-megdb_r8-qsub-ticker.ini' />
          </property_group>
     </instance>

     <instance name='int' enabled='true'>
          <method_context>
               <method_credential user='megxnet' group='postgres' />
          </method_context>

          <property_group name='pgq' type='application'>
          	   <propval name='pgqdir' type='astring' value='/opt/pgq' />
               <propval name='consumer' type='astring' value='qsub-consumer.py' />
               <propval name='consumer-config' type='astring' value='antares/int-megdb_r8-qsub-consumer.conf' />
               <propval name='ticker' type='astring' value='antares/int-megdb_r8-qsub-ticker.ini' />
          </property_group>
     </instance>

     <instance name='prod' enabled='true'>
          <method_context>
               <method_credential user='megxnet' group='postgres' />
          </method_context>

          <property_group name='pgq' type='application'>
          	   <propval name='pgqdir' type='astring' value='/opt/pgq' />
               <propval name='consumer' type='astring' value='qsub-consumer.py' />
               <propval name='consumer-config' type='astring' value='antares/prod-megdb_r8-qsub-consumer.conf' />
               <propval name='ticker' type='astring' value='antares/prod-megdb_r8-qsub-ticker.ini' />
          </property_group>
     </instance>

     <stability value='Evolving' />

     <template>
          <common_name>
               <loctext xml:lang='C'>
               PGQ
               </loctext>
          </common_name>
          <documentation>
               <manpage title='pgq' section='1M' />
               <doc_link name='PGQ Tutorial'
                    uri='http://wiki.postgresql.org/wiki/PGQ_Tutorial' />
          </documentation>
     </template>

</service>

</service_bundle>

